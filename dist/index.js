!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{d(o.next(t))}catch(t){r(t)}}function a(t){try{d(o.throw(t))}catch(t){r(t)}}function d(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}d((o=o.apply(t,e||[])).next())}))},i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=i(n(1)),s=n(2),a="github-access-token",d="action-type",u="ledger-repo-url",c="ledger-repo-owner",l="ledger-repo-name",h="version-component-id",p="version-tag",f="test-setup-id",m="test-status",g="test-component-version-map",w={ADD_VERSION:"add-version",ADD_TEST_RESULT:"add-test-result"};!function(){o(this,void 0,void 0,(function*(){try{const t=r.default.getInput(a),e=r.default.getInput(d),n=new s.Ledger({octokitAuthToken:t,ledgerRepo:{url:r.default.getInput(u),owner:r.default.getInput(c),name:r.default.getInput(l)}});switch(n.init(),yield n.fetch(),e){case w.ADD_VERSION:{const t=r.default.getInput(h),e=r.default.getInput(p);yield n.addVersion({componentId:t,tag:e}),console.log(`SUCCESS: Added version ${t}@${e}`);break}case w.ADD_TEST_RESULT:{const t=r.default.getInput(f),e=r.default.getInput(m),o=r.default.getInput(g),i=JSON.parse(o);yield n.addTest({setupId:t,status:e,componentVersionMap:i}),console.log(`SUCCESS: Added test result ${t} - ${e}. Versions:\n${o}`);break}default:throw new Error(`Please specify input value for "${d}".\n          It could be either of the following: ${Object.values(w).map(t=>`"${t}"`)}`)}}catch(t){r.default.setFailed("ERROR: "+((null==t?void 0:t.message)||"unknown error"))}}))}()},function(t,e){t.exports=require("@actions/core")},function(t,e,n){"use strict";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{d(o.next(t))}catch(t){r(t)}}function a(t){try{d(o.throw(t))}catch(t){r(t)}}function d(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}d((o=o.apply(t,e||[])).next())}))},i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Ledger=void 0;const r=n(3),s=i(n(4)),a=n(5),d=i(n(6)),u=i(n(7));d.default.extend(u.default),e.default=function(t,e){return o(this,void 0,void 0,(function*(){const n=new c({octokitAuthToken:t,ledgerRepo:e,isCli:!1});return yield n.init(),n}))};class c{constructor(t){this.ledgerFilePath="ledger.json",this.defaultData={components:[],versions:[],setups:[],tests:[]};const{octokitAuthToken:e,ledgerRepo:n,isCli:o=!0}=t;this.auth=e,this.ledgerRepo=n,this.isCli=o}init(){this.octokit||(this.octokit=new r.Octokit({auth:this.auth}))}getOctokitInstance(){if(!this.octokit)throw new Error("You are not authorized with GitHub account");return this.octokit}fetch(){return o(this,void 0,void 0,(function*(){if(!this.octokit)return;const t=yield this.octokit.request(`GET /repos/${this.ledgerRepo.owner}/${this.ledgerRepo.name}/contents/${this.ledgerFilePath}`);if(200!==t.status)throw new Error("Failed to load ledger data: "+t.data.error);return this.data=this.deserialize(t.data.content),this.sha=t.data.sha,this}))}addTo(t,e){return o(this,void 0,void 0,(function*(){const n=Object.assign(Object.assign({},this.data),{[t]:[...this.data[t],e]}),o=yield this.octokit.request(`PUT /repos/${this.ledgerRepo.owner}/${this.ledgerRepo.name}/contents/${this.ledgerFilePath}`,{message:"new "+t,content:this.serialize(n),sha:this.sha});if(200!==o.status)throw new Error("Failed to update ledger data: "+o.data.error);const i=yield this.octokit.request(`GET /repos/${this.ledgerRepo.owner}/${this.ledgerRepo.name}/contents/${this.ledgerFilePath}`);if(this.data=n,this.sha=o.data.content.sha,this.sha!==i.data.sha){const t="CRITICAL ERROR: post-update SHA check failed. Open development console, copy error log and contact the development team";throw console.error(t,"\n","response data","\n",o,"\n","check data","\n",i,"\n","---CRITICAL ERROR LOG END---"),new Error(t)}}))}deserialize(t){return JSON.parse(a.b64_to_utf8(t))}serialize(t){return a.utf8_to_b64(JSON.stringify(t))}addComponent(t){return o(this,void 0,void 0,(function*(){if(!this.checkData(this.data))throw new Error(`No local data; Check internet connection and make sure that Github and ${this.ledgerRepo.url} are reachable`);if(a.validateNonEmptyString("id",t.id),a.validateNonEmptyString("name",t.name),this.isComponentExists(t.id,t.name))throw new Error("Component with the same id or name already exists");yield this.addTo("components",{id:t.id.trim(),name:t.name.trim()})}))}addSetup(t){return o(this,void 0,void 0,(function*(){if(!this.checkData(this.data))throw new Error(`No local data; Check internet connection and make sure that Github and ${this.ledgerRepo.url} are reachable`);if(a.validateNonEmptyString("id",t.id),a.validateNonEmptyString("name",t.name),!Array.isArray(t.componentIds)||0===t.componentIds.length)throw new Error("Setup must include at least one component");if(this.data.setups.findIndex(e=>e.id===t.id||e.name===t.name)>-1)throw new Error("Setup with the same id or name already exists");const e=t=>{let e="";for(let n=0;n<t.length;n++)e+=t[n];return e},n=e(t.componentIds);if(!(-1===this.data.setups.map(t=>t.componentIds).map(e).findIndex(t=>t===n)))throw new Error("Setup with the same list of components already exist");const o=t.componentIds.filter(t=>!this.isComponentExists(t));if(o.length>0)throw new Error("Components with the following ids do not exist:\n"+o.join("\n"));yield this.addTo("setups",{id:t.id.trim(),name:t.name.trim(),componentIds:t.componentIds.sort()})}))}addVersion(t){return o(this,void 0,void 0,(function*(){if(!this.checkData(this.data))throw new Error(`No local data; Check internet connection and make sure that Github and ${this.ledgerRepo.url} are reachable`);const{componentId:e,tag:n}=t;if(a.validateNonEmptyString("componentId",e),a.validateNonEmptyString("tag",n),!this.isComponentExists(e)){const t=`Component with id ${e} does not exist, but it will be added automatically. Later, you can edit it's parameters manually`;this.warning(t),yield this.addComponent({id:e,name:a.kebabToPascalCase(e)})}const o=this.findVersion(e,n);if(o){const t=`\n      Version ${e}:${n} already exists.\n      It was created at ${d.default(o.date).format("DD/MM/YY hh:mm:ss")}.\n      Duplicate version will be added and take priority over the previous one.\n      But you will still able to see it in the version table.\n    `;this.warning(t)}yield this.addTo("versions",{date:Date.now(),componentId:e.trim(),tag:n.trim()})}))}addTest(t){var e;return o(this,void 0,void 0,(function*(){if(!this.checkData(this.data))throw new Error(`No local data; Check internet connection and make sure that Github and ${this.ledgerRepo.url} are reachable`);if(a.validateNonEmptyString("id",t.setupId),a.validateNonEmptyString("status",t.status),0===Object.keys(t.componentVersionMap).length)throw new Error("Please specify a version for each of the components");const n=this.getSetupById(t.setupId);if(n)this.validateSetupComponentsList(t,n.componentIds);else{const e=`Setup with id ${t.setupId} doesn't exists.\n      Test result will be saved, but will only be visible in raw tests data table.\n      Make sure to add ${t.setupId} to setups list.`;this.warning(e),this.validateSetupComponentsList(t)}yield this.addTo("tests",{date:Date.now(),componentVersionMap:t.componentVersionMap,setupId:t.setupId,status:t.status.trim(),description:null===(e=t.description)||void 0===e?void 0:e.trim()})}))}validateSetupComponentsList(t,e){const n=Object.keys(t.componentVersionMap);if(Array.isArray(e)&&e.length>0){if(!e.every(t=>n.includes(t)))throw new Error("Please specify a version for each of the components")}let o="";for(const e in t.componentVersionMap){const n=t.componentVersionMap[e];this.findVersion(e,n)||(o=`${e}:${n} does not exists!\n`)}o&&(o+="Test result will be saved, but make sure to add these versions",this.warning(o))}getLatestVersion(t){if(!this.data)throw new Error("no data");return this.data.versions.filter(e=>e.componentId===t).sort((t,e)=>s.default.compare(e.tag,t.tag))[0]}getLatestVersions(t){if(!this.data)throw new Error("no data");if(t){const e=this.data.setups.find(e=>t===e.id);if(!e)throw new Error(`CRITICAL ERROR: setup with ${t} not found. Normally, this should not happen. Please contact the development team`);return e.componentIds.map(this.getLatestVersion)}return this.data.components.map(t=>t.id).map(this.getLatestVersion)}getSetupComponents(t){if(!this.data)throw new Error("no data");const e=this.getSetupById(t);if(!e)throw new Error(`setup with id "${t}" is not found`);const n=this.data.components.filter(t=>e.componentIds.includes(t.id));return 0===n.length&&this.warning(`getSetupComponents(): setup ${t} appears to have no components`),n}getSetupById(t){return this.data.setups.find(e=>e.id===t)}getSetupTests(t){return this.data.tests.filter(e=>e.setupId===t)}findVersion(t,e){return this.data.versions.filter(e=>e.componentId===t).find(t=>t.tag===e)}getComponentsVersions(t){if(!this.data)throw new Error("no data");const e=t.reduce((t,e)=>(t[e]=[],t),{});return this.data.versions.filter(t=>e[t.componentId]).sort((t,e)=>s.default.compare(e.tag,t.tag)).forEach(t=>{e[t.componentId].push(t.tag)}),e}checkData(t){return t&&Array.isArray(t.components)&&Array.isArray(t.versions)&&Array.isArray(t.setups)&&Array.isArray(t.tests)}isComponentExists(t,e){if(!this.data)throw new Error("no data");return e?this.data.components.findIndex(n=>n.id===t&&n.name===e)>-1:this.data.components.findIndex(e=>e.id===t)>-1}warning(t){console.warn(t)}}e.Ledger=c},function(t,e){t.exports=require("@octokit/core")},function(t,e){t.exports=require("semver")},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.kebabToPascalCase=e.validateNonEmptyString=e.b64_to_utf8=e.utf8_to_b64=void 0,e.utf8_to_b64=function(t){return Buffer.from(unescape(encodeURIComponent(t))).toString("base64")},e.b64_to_utf8=function(t){return decodeURIComponent(escape(Buffer.from(t,"base64").toString()))},e.validateNonEmptyString=function(t,e){if(!e||"string"!=typeof e)throw new Error(`Expected ${t} to be a non-empty string, but got: "${e}"`)},e.kebabToPascalCase=function(t){return t.split("-").map(t=>t.charAt(0).toUpperCase()+t.slice(1)).join(" ")}},function(t,e){t.exports=require("dayjs")},function(t,e){t.exports=require("dayjs/plugin/relativeTime")}]);